version: v1beta11

vars:
  # kubeedge certificates
  - name: KUBEEDGE_CA
    value: kubeedge
  - name: CAROOT
    command: echo $HOME/.devspace/ca/${KUBEEDGE_CA}

dependencies:
  - name: mkcert
    source:
      git: https://github.com/edgefarm/devspace.base
      subPath: /environments/mkcert
      branch: v2.0.0
    vars:
      - name: CAROOT
        value: ${CAROOT}

commands:
  - name: start
    command: devspace --var KUBEEDGE_CA=${KUBEEDGE_CA} --var CAROOT=${CAROOT} deploy --profile=with-deployments

  - name: stop
    command: devspace --var KUBEEDGE_CA=${KUBEEDGE_CA} --var CAROOT=${CAROOT} purge --profile=with-deployments

profiles:
  - name: with-deployments
    merge:

      deployments:
        - name: virtual-edge-node
          namespace: virtual-edge-nodes
          kubectl:
            kustomize: true
            manifests:
              - dev/manifests

      hooks:
        - name: "prepare-virtual-edge-nodes-certs"
          command: |-
            #!/bin/bash
            set -e
            FILE=$(pwd)/dev/manifests/.env/node/node.pem
            if [ -f "$FILE" ]; then
              echo "virtual edge node certificate exist's. skipping."
              exit 0
            fi
            devspace --var CAROOT=${CAROOT} run mkcert.create-client-cert \
              -cert-file $(pwd)/dev/manifests/.env/node/node.pem \
              -key-file $(pwd)/dev/manifests/.env/node/node.key *.nip.io *.edgefarm.local cloudcore.kubeedge.svc.cluster.local
            cp ${CAROOT}/rootCA.pem $(pwd)/dev/manifests/.env/ca
          events: ["before:deploy:virtual-edge-node"]

        - name: "cleanup-virtual-edge-nodes"
          command: |-
            #!/bin/bash
            set -e
            kubectl get nodes -o json | jq '.items | map(select(.metadata.name | test("virtual-device-.+"))) | {kind: "List", items: .}' | kubectl delete -f -
            rm $(pwd)/dev/manifests/.env/node/node.pem
            rm $(pwd)/dev/manifests/.env/node/node.key
          events: ["after:purge:virtual-edge-node"]
